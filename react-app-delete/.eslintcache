[{"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/index.tsx":"1","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/App.tsx":"2","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/configureClient.ts":"3","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/utils/auth.tsx":"4","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Welcome/index.tsx":"5","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Users/index.tsx":"6","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Subscription/index.tsx":"7","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/SignUp/index.tsx":"8","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Update/index.tsx":"9","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Login/index.tsx":"10","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/NoMatch/index.tsx":"11","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/config/index.ts":"12","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/utils/validation.ts":"13","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/mutation/updateUser.ts":"14","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/query/user.ts":"15","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/subscription/users.ts":"16","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/mutation/createUser.ts":"17","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/Card/index.tsx":"18","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/List/index.tsx":"19","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/Footer/index.tsx":"20","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/LoginForm/index.tsx":"21","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/query/login.ts":"22"},{"size":252,"mtime":1625813722439,"results":"23","hashOfConfig":"24"},{"size":1529,"mtime":1625813717813,"results":"25","hashOfConfig":"24"},{"size":2205,"mtime":1625783567204,"results":"26","hashOfConfig":"24"},{"size":742,"mtime":1625783567212,"results":"27","hashOfConfig":"24"},{"size":624,"mtime":1625783567211,"results":"28","hashOfConfig":"24"},{"size":820,"mtime":1625783567210,"results":"29","hashOfConfig":"24"},{"size":917,"mtime":1625783567209,"results":"30","hashOfConfig":"24"},{"size":2882,"mtime":1625783567208,"results":"31","hashOfConfig":"24"},{"size":2744,"mtime":1625783567210,"results":"32","hashOfConfig":"24"},{"size":515,"mtime":1625783567207,"results":"33","hashOfConfig":"24"},{"size":384,"mtime":1625783567208,"results":"34","hashOfConfig":"24"},{"size":192,"mtime":1625783567204,"results":"35","hashOfConfig":"24"},{"size":305,"mtime":1625783567212,"results":"36","hashOfConfig":"24"},{"size":336,"mtime":1625783567205,"results":"37","hashOfConfig":"24"},{"size":225,"mtime":1625783567206,"results":"38","hashOfConfig":"24"},{"size":252,"mtime":1625783567206,"results":"39","hashOfConfig":"24"},{"size":293,"mtime":1625783567205,"results":"40","hashOfConfig":"24"},{"size":890,"mtime":1625783567201,"results":"41","hashOfConfig":"24"},{"size":504,"mtime":1625783567203,"results":"42","hashOfConfig":"24"},{"size":454,"mtime":1625783567202,"results":"43","hashOfConfig":"24"},{"size":2495,"mtime":1625783567203,"results":"44","hashOfConfig":"24"},{"size":301,"mtime":1625783567205,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fawcd6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/index.tsx",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/App.tsx",["99"],"/**\n * App Component\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport apolloClient from './configureClient';\nimport PrivateRoute from './utils/auth';\nimport Login from './screens/Login';\nimport SignUp from './screens/SignUp';\nimport Welcome from './screens/Welcome';\nimport Users from './screens/Users';\nimport Update from './screens/Update';\nimport NoMatch from './screens/NoMatch';\nimport Subscription from './screens/Subscription';\n\nconst App = () => {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <PrivateRoute path=\"/welcome\" component={Welcome} />\n          <PrivateRoute path=\"/users\" component={Users} />\n          <PrivateRoute path=\"/update\" component={Update} />\n          <PrivateRoute path=\"/subscription\" component={Subscription} />\n          <Route path=\"*\" component={NoMatch} />\n        </Switch>\n      </Router>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        draggable\n        pauseOnHover\n      />\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/configureClient.ts",["100","101","102"],"/**\n * Apollo Client Configuration\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport { ApolloClient } from 'apollo-client';\nimport { split, ApolloLink, concat } from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport Cookies from 'js-cookie';\nimport { SERVER, WEB_SOCKET_LINK } from './config';\n\ninterface Definintion {\n  kind: string;\n  operation?: string;\n}\n\nlet authToken = '';\n\nconst httpLink = new HttpLink({\n  fetch,\n  uri: SERVER,\n});\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  operation.setContext({\n    headers: {\n      authorization: authToken || null,\n    },\n  });\n  // Add onto payload for WebSocket authentication\n  (operation as any & { authToken: string | undefined }).authToken = authToken;\n\n  return forward(operation);\n});\n\nconst webSocketLink: WebSocketLink = new WebSocketLink({\n  uri: WEB_SOCKET_LINK,\n  options: {\n    reconnect: true,\n  },\n});\n\n/**\n * Set Token\n * @param token\n */\nexport const setToken = async (token: string | undefined) => {\n  try {\n    authToken = token ? `Bearer ${token}` : '';\n    Cookies.set('token', authToken, { expires: 7 });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/**\n * Get Token & Set Token In Request\n */\nexport const getToken = async () => {\n  try {\n    const token = Cookies.get('token');\n    authToken = token ? token : '';\n    return authToken;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/**\n * Destroy Token\n * For logout purpose\n */\nexport const destroyToken = async () => {\n  try {\n    Cookies.remove('token');\n    authToken = '';\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation }: Definintion = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  webSocketLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link: concat(authMiddleware, link),\n  cache: new InMemoryCache().restore({}),\n  connectToDevTools: true,\n});\n\nexport default client;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/utils/auth.tsx",["103","104"],"/**\n * Auth Middlerware Component\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport * as React from 'react';\nimport { setToken } from '../configureClient';\nimport Cookies from 'js-cookie';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  const token = Cookies.get('token');\n  setToken(token);\n  if (!token) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <Route\n      {...rest}\n      render={({ location }: any) =>\n        token ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Welcome/index.tsx",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Users/index.tsx",["105"],"/**\n * User List Page\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport List from '../../components/List';\nimport { useQuery } from '@apollo/react-hooks';\nimport GET_USERS from '../../graphql/query/user';\nimport './styles.scss';\n\nconst Users = () => {\n  const { loading, error, data } = useQuery(GET_USERS);\n  let message = 'Users';\n  if (loading) message = 'Loading...';\n  if (error) message = `Error! ${error}`;\n  if (data && data.users.length <= 0) message = 'No Users';\n  return (\n    <div className=\"users-container\">\n      <h1 className=\"users-heading\">{message}</h1>\n      {data && data.users.length > 0 && (\n        <div className=\"users-listContainer\">\n          <List img=\"./user.png\" data={data.users} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Users;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Subscription/index.tsx",["106"],"/**\n * Subscription Page\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport { useSubscription } from '@apollo/react-hooks';\nimport { UserCard } from '../../components/Card';\nimport USER_ADDED from '../../graphql/subscription/users';\nimport './styles.scss';\n\nconst Subscription = () => {\n  const { data, loading, error } = useSubscription(USER_ADDED);\n  let message = 'New User';\n  if (loading) message = 'Listening...';\n  if (error) message = `Error! ${error.message}`;\n  if (data && data.userAdded.length <= 0) message = 'No New User Added';\n  return (\n    <div className=\"subscription-container\">\n      <h1 className=\"subscription-heading\">{message}</h1>\n      {data && data.userAdded && (\n        <div className=\"subscription-listContainer\">\n          <UserCard img=\"./user.png\" user={data.userAdded} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Subscription;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/SignUp/index.tsx",["107","108","109","110","111","112","113"],"/**\n * SignUp Page\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport Footer from '../../components/Footer';\nimport Cookies from 'js-cookie';\nimport { Mutation } from '@apollo/react-components';\nimport CREATE_USER from '../../graphql/mutation/createUser';\nimport { setToken } from '../../configureClient';\nimport { validateEmail } from '../../utils/validation';\nimport './styles.scss';\n\ninterface SignUpState {\n  [key: string]: any;\n  name: string;\n  email: string;\n  password: string;\n}\n\nclass SignUp extends React.PureComponent<any, SignUpState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = (event: any) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = async (createUser: any, event: any) => {\n    try {\n      event.preventDefault();\n      const { state, props } = this;\n      if (validateEmail(state.email)) {\n        const data = await createUser({\n          variables: {\n            userInput: { ...state },\n          },\n        });\n        const { token, userId } = data.createUser;\n        setToken(token);\n        Cookies.set('userId', userId, { expires: 7 });\n        props.history.replace('/welcome');\n      } else {\n        toast.error('Invalid Email');\n      }\n    } catch (error) {\n      toast.error('Check your connection');\n    }\n  };\n  render() {\n    const { state } = this;\n    return (\n      <div className=\"signup-container\">\n        <h1 className=\"signup-heading\">Sign Up</h1>\n        <Mutation mutation={CREATE_USER}>\n          {(createUser: any) => (\n            <form\n              onSubmit={event => this.handleSubmit(createUser, event)}\n              className=\"signup-form\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={state.name}\n                onChange={this.handleChange}\n                className=\"signup-input-box\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={state.email}\n                onChange={this.handleChange}\n                className=\"signup-input-box\"\n                required\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={state.password}\n                onChange={this.handleChange}\n                className=\"signup-input-box\"\n                required\n              />\n              <input type=\"submit\" value=\"Submit\" className=\"signup-button\" />\n            </form>\n          )}\n        </Mutation>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Update/index.tsx",["114","115","116","117","118","119","120"],"/**\n * Update Profile Page\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport Footer from '../../components/Footer';\nimport { Mutation } from '@apollo/react-components';\nimport { validateEmail } from '../../utils/validation';\nimport UPDATE_USER from '../../graphql/mutation/updateUser';\nimport './styles.scss';\n\ninterface UpdateState {\n  [key: string]: any;\n  name: string;\n  email: string;\n  password: string;\n}\n\nclass Update extends React.PureComponent<any, UpdateState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = (event: any) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = async (updateUser: any, event: any) => {\n    try {\n      event.preventDefault();\n      const { state, props } = this;\n      if (validateEmail(state.email)) {\n        await updateUser({\n          variables: {\n            userId: props.userId,\n            updateUser: { ...state },\n          },\n        });\n        toast.success('Profile Updated');\n        props.history.push('/welcome');\n      } else {\n        toast.error('Invalid Email');\n      }\n    } catch (error) {\n      toast.error('Check your connection');\n    }\n  };\n  render() {\n    const { state } = this;\n    return (\n      <div className=\"update-container\">\n        <h1 className=\"update-heading\">Update Profile</h1>\n        <Mutation mutation={UPDATE_USER}>\n          {(updateUser: any) => (\n            <form\n              onSubmit={event => this.handleSubmit(updateUser, event)}\n              className=\"update-form\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={state.name}\n                onChange={this.handleChange}\n                className=\"update-input-box\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={state.email}\n                onChange={this.handleChange}\n                className=\"update-input-box\"\n                required\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={state.password}\n                onChange={this.handleChange}\n                className=\"update-input-box\"\n                required\n              />\n              <input type=\"submit\" value=\"Submit\" className=\"update-button\" />\n            </form>\n          )}\n        </Mutation>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Update;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/Login/index.tsx",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/screens/NoMatch/index.tsx",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/config/index.ts",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/utils/validation.ts",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/mutation/updateUser.ts",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/query/user.ts",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/subscription/users.ts",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/mutation/createUser.ts",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/Card/index.tsx",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/List/index.tsx",["121"],"/**\n * List Component\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport { UserCard } from '../Card';\nimport './styles.scss';\n\ninterface User {\n  name: string;\n  _id: string;\n  email: string;\n}\n\ninterface ListProps {\n  data: [User];\n  img: string;\n}\n\nconst List: React.SFC<ListProps> = props => {\n  return (\n    <>\n      {props.data.map((user: User) => (\n        <UserCard key={user._id} user={user} img={props.img} />\n      ))}\n    </>\n  );\n};\n\nexport default List;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/Footer/index.tsx",[],"/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/components/LoginForm/index.tsx",["122","123","124","125","126","127","128"],"/**\n * Login Form Component\n * @author Anurag Garg <garganurag893@gmail.com>\n */\n\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport { ApolloConsumer } from 'react-apollo';\nimport LOGIN_USER from '../../graphql/query/login';\nimport { validateEmail } from '../../utils/validation';\nimport { setToken } from '../../configureClient';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport './styles.scss';\n\ninterface LoginFormState {\n  [key: string]: any;\n  email: string;\n  password: string;\n}\n\nclass LoginForm extends React.PureComponent<any, LoginFormState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = (event: any) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = async (event: any, client: any) => {\n    try {\n      event.preventDefault();\n      const { state, props } = this;\n      if (validateEmail(state.email)) {\n        const { data } = await client.query({\n          query: LOGIN_USER,\n          variables: { ...state },\n        });\n        const { token, userId } = data.login;\n        setToken(token);\n        Cookies.set('userId', userId, { expires: 7 });\n        props.history.replace('/welcome');\n      } else {\n        toast.error('Invalid Email');\n      }\n    } catch (error) {\n      toast.error('Not Authenticated');\n    }\n  };\n\n  render() {\n    const { state } = this;\n    return (\n      <ApolloConsumer>\n        {client => (\n          <form\n            onSubmit={e => this.handleSubmit(e, client)}\n            className=\"login-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={state.email}\n              onChange={this.handleChange}\n              className=\"login-input-box\"\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={state.password}\n              onChange={this.handleChange}\n              className=\"login-input-box\"\n              required\n            />\n            <input type=\"submit\" value=\"Submit\" className=\"login-button\" />\n            <Link to=\"/signup\" className=\"signup-link\">\n              <p>\n                New user ? <b>Sign Up</b>\n              </p>\n            </Link>\n          </form>\n        )}\n      </ApolloConsumer>\n    );\n  }\n}\n\nexport default LoginForm;\n","/Users/SEBCHAPMAN/Projects/OneSeedling/Next.js_GraphQL_Express_Apollo_Boilerplate/react-app/src/graphql/query/login.ts",[],{"ruleId":"129","severity":1,"message":"130","line":21,"column":13,"nodeType":"131","messageId":"132","endLine":21,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":51,"column":25,"nodeType":"131","messageId":"132","endLine":51,"endColumn":61},{"ruleId":"129","severity":1,"message":"130","line":63,"column":25,"nodeType":"131","messageId":"132","endLine":63,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":77,"column":29,"nodeType":"131","messageId":"132","endLine":77,"endColumn":40},{"ruleId":"129","severity":1,"message":"130","line":11,"column":22,"nodeType":"131","messageId":"132","endLine":11,"endColumn":53},{"ruleId":"129","severity":1,"message":"133","line":11,"column":23,"nodeType":"134","messageId":"135","endLine":11,"endColumn":49},{"ruleId":"129","severity":1,"message":"130","line":12,"column":15,"nodeType":"131","messageId":"132","endLine":12,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":12,"column":22,"nodeType":"131","messageId":"132","endLine":12,"endColumn":27},{"ruleId":"129","severity":1,"message":"136","line":24,"column":15,"nodeType":"137","messageId":"138","endLine":24,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":33,"column":18,"nodeType":"131","messageId":"132","endLine":33,"endColumn":33},{"ruleId":"129","severity":1,"message":"139","line":33,"column":19,"nodeType":"137","messageId":"138","endLine":33,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":37,"column":18,"nodeType":"131","messageId":"132","endLine":37,"endColumn":56},{"ruleId":"129","severity":1,"message":"140","line":37,"column":25,"nodeType":"137","messageId":"138","endLine":37,"endColumn":40},{"ruleId":"129","severity":1,"message":"139","line":37,"column":42,"nodeType":"137","messageId":"138","endLine":37,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":58,"column":3,"nodeType":"141","messageId":"132","endLine":58,"endColumn":11},{"ruleId":"129","severity":1,"message":"136","line":22,"column":15,"nodeType":"137","messageId":"138","endLine":22,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":31,"column":18,"nodeType":"131","messageId":"132","endLine":31,"endColumn":33},{"ruleId":"129","severity":1,"message":"139","line":31,"column":19,"nodeType":"137","messageId":"138","endLine":31,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":35,"column":18,"nodeType":"131","messageId":"132","endLine":35,"endColumn":56},{"ruleId":"129","severity":1,"message":"142","line":35,"column":25,"nodeType":"137","messageId":"138","endLine":35,"endColumn":40},{"ruleId":"129","severity":1,"message":"139","line":35,"column":42,"nodeType":"137","messageId":"138","endLine":35,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":55,"column":3,"nodeType":"141","messageId":"132","endLine":55,"endColumn":11},{"ruleId":null,"fatal":true,"severity":2,"message":"143"},{"ruleId":"129","severity":1,"message":"136","line":23,"column":15,"nodeType":"137","messageId":"138","endLine":23,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":31,"column":18,"nodeType":"131","messageId":"132","endLine":31,"endColumn":33},{"ruleId":"129","severity":1,"message":"139","line":31,"column":19,"nodeType":"137","messageId":"138","endLine":31,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":35,"column":18,"nodeType":"131","messageId":"132","endLine":35,"endColumn":52},{"ruleId":"129","severity":1,"message":"139","line":35,"column":25,"nodeType":"137","messageId":"138","endLine":35,"endColumn":35},{"ruleId":"129","severity":1,"message":"144","line":35,"column":37,"nodeType":"137","messageId":"138","endLine":35,"endColumn":48},{"ruleId":"129","severity":1,"message":"130","line":56,"column":3,"nodeType":"141","messageId":"132","endLine":56,"endColumn":11},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg","Argument 'event' should be typed with a non-any type.","Argument 'createUser' should be typed with a non-any type.","FunctionExpression","Argument 'updateUser' should be typed with a non-any type.","Parsing error: Cannot read property 'map' of undefined","Argument 'client' should be typed with a non-any type."]